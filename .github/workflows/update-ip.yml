name: Update Cloudflare Proxy IP

on:
  schedule:
    - cron: '0 1 * * *'  # 每小时执行一次（UTC时间）
  workflow_dispatch:     # 支持手动触发

jobs:
  update-ip:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. 获取新的代理IP（支持多行IP并随机选择）
      - name: Fetch New Proxy IP
        id: get_ip
        run: |
          # 调用 API 获取IP列表
          IP_LIST=$(curl -s "https://ipdb.api.030101.xyz/?type=bestproxy")
          
          # 按换行分割IP并清理空行
          IFS=$'\n' read -ra IPS <<< "$IP_LIST"
          
          # 验证并收集有效IP
          VALID_IPS=()
          for ip in "${IPS[@]}"; do
            # 清理可能的空格
            ip=$(echo "$ip" | xargs)
            # 跳过空行
            if [ -z "$ip" ]; then
              continue
            fi
            # 验证IP格式
            if [[ "$ip" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              VALID_IPS+=("$ip")
            else
              echo "警告：无效的IP格式: $ip"
            fi
          done
          
          # 检查是否有有效IP
          if [ ${#VALID_IPS[@]} -eq 0 ]; then
            echo "错误：未获取到有效IP"
            echo "原始响应: $IP_LIST"
            exit 1
          fi
          
          # 随机选择一个IP
          RANDOM_INDEX=$(( RANDOM % ${#VALID_IPS[@]} ))
          NEW_IP=${VALID_IPS[$RANDOM_INDEX]}
          
          echo "NEW_IP=$NEW_IP" >> $GITHUB_ENV
          echo "获取到有效IP总数: ${#VALID_IPS[@]}"
          echo "随机选择的IP: $NEW_IP"

      # 3. 验证文件存在并显示内容（增加调试信息）
      - name: Verify File Existence and Content
        run: |
          FILE_PATH="ipurl.txt"
          
          if [ ! -f "$FILE_PATH" ]; then
            echo "错误: $FILE_PATH 文件不存在!"
            echo "当前目录内容:"
            ls -la
            exit 1
          fi
          
          echo "文件验证通过，当前内容:"
          cat "$FILE_PATH"
          echo "文件权限:"
          ls -l "$FILE_PATH"

      # 4. 更新文件内容（优化版）
      - name: Replace IP in File
        run: |
          FILE_PATH="ipurl.txt"
          
          # 提取当前内容和IP（更健壮的方式）
          CURRENT_CONTENT=$(cat "$FILE_PATH")
          echo "当前文件完整内容: $CURRENT_CONTENT"
          
          # 使用更灵活的正则表达式提取旧IP
          if [[ "$CURRENT_CONTENT" =~ @([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+) ]]; then
            OLD_IP="${BASH_REMATCH[1]}"
            echo "提取到旧IP: $OLD_IP"
          else
            echo "错误：无法从文件中提取旧IP"
            exit 1
          fi
          
          # 替换IP（使用更通用的模式）
          echo "替换 $OLD_IP 为 ${{ env.NEW_IP }}"
          sed -i.bak "s|$OLD_IP|${{ env.NEW_IP }}|g" "$FILE_PATH"
          
          # 删除备份文件
          rm -f "${FILE_PATH}.bak"
          
          echo "文件修改后内容:"
          cat "$FILE_PATH"
          
          # 验证修改是否成功
          UPDATED_CONTENT=$(cat "$FILE_PATH")
          if [[ "$UPDATED_CONTENT" == *"${{ env.NEW_IP }}"* ]]; then
            echo "IP替换成功"
          else
            echo "错误：IP替换失败"
            exit 1
          fi

      # 5. 提交更改
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          git add ipurl.txt
          git status
          
          # 只有在有更改时才提交
          if git diff --quiet; then
            echo "没有检测到更改，不需要提交"
          else
            git commit -m "Auto-Update: Replace proxy IP to ${{ env.NEW_IP }}"
            git push origin HEAD:${{ github.ref }}
          fi
